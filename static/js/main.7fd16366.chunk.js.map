{"version":3,"sources":["components/App/App.js","utils/utils.js","components/BarChart/BarChart.js","components/Safari1/Safari1.js","components/Safari2/Safari2.js","components/Safari3/Safari3.js","components/Radio1/Radio1.js","components/Radio2/Radio2.js","components/PoliceDepartment/PoliceDepartment.js","index.js"],"names":["App","Box","display","flexDirection","alignItems","pt","clone","Grid","direction","container","spacing","item","clampHue","clamp","getColor","offset","max","value","v","hue","getAverage","Array","fill","map","_","i","color","from","to","arr","sum","size","getTextColor","seriesIndex","dataPointIndex","series","findSeriesMax","flow","zipAll","getSeries","data","type","filter","getLabels","BarChart","id","title","subtitle","options","colors","textColors","defaultOptions","text","floating","align","chart","stacked","plotOptions","bar","horizontal","borderRadius","stroke","width","yaxis","dataLabels","style","tooltip","fontSize","y","formatter","seriesName","legend","markers","fillColors","finalOptions","merge","height","length","getCurrentSeries","safari_1","getCurrentLabels","getCurrentPositionLabels","Safari1","name","slice","series2","series3","xaxis","categories","options2","options3","safari_2","Safari2","safari_3","Safari3","radio_1","Radio1","radio_2","Radio2","police_department","PoliceDepartment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fd16366.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Grid } from '@material-ui/core';\n\nimport {\n  Safari1,\n  Safari2,\n  Safari3,\n  Radio1,\n  Radio2,\n  PoliceDepartment,\n} from 'components';\n\nconst App = () => (\n  <Box\n    display={'flex'}\n    flexDirection={'column'}\n    alignItems={'center'}\n    pt={4}\n    clone\n  >\n    <Grid direction={'column'} container spacing={4}>\n      <Safari1 />\n\n      <Grid item>\n        <Radio1 />\n      </Grid>\n\n      <Safari2 />\n\n      <Grid item>\n        <Radio2 />\n      </Grid>\n\n      <Grid item>\n        <PoliceDepartment />\n      </Grid>\n\n      <Grid item>\n        <Safari3 />\n      </Grid>\n    </Grid>\n  </Box>\n);\n\nexport default App;\n","import {\r\n  filter,\r\n  flow,\r\n  clamp,\r\n  sum,\r\n  size,\r\n  map,\r\n  zipAll,\r\n  max,\r\n} from 'lodash/fp';\r\n\r\nconst clampHue = clamp(0, 120);\r\n\r\nconst getColor = (offset = 0, max = 100) => value => {\r\n  if (value >= max) return `hsl(120, 90%, 50%)`;\r\n  const v = clamp(offset, max, value) - offset;\r\n  var hue = clampHue((v / (max - offset)) * 70);\r\n  return `hsl(${hue}, 90%, 50%)`;\r\n};\r\n\r\nconst get100color = getColor(30, 100);\r\n\r\nconst ranges = Array(101)\r\n  .fill()\r\n  .map((_, i) => getColor(i))\r\n  .map((color, i) => ({\r\n    from: i,\r\n    to: i,\r\n    color,\r\n  }));\r\n\r\nconst getAverage = arr => sum(arr) / size(arr);\r\n\r\nconst getAverageColor = arr =>\r\n  flow(getAverage, getColor)(arr);\r\n\r\nconst getTextColor = max => ({\r\n  seriesIndex,\r\n  dataPointIndex,\r\n  series,\r\n}) =>\r\n  series[seriesIndex][dataPointIndex] / max > 0.55\r\n    ? '#000'\r\n    : '#fff';\r\n\r\nconst getPercentageValue = (max, decimalPoints = 0) => v =>\r\n  ((v / max) * 100).toFixed(decimalPoints);\r\n\r\nconst findSeriesMax = series =>\r\n  flow(map('data'), zipAll, map(sum), max)(series);\r\n\r\nconst getSeries = data => type =>\r\n  flow(filter({ type }), map('value'))(data);\r\n\r\nconst getLabels = (data, type = 'riddle') => () =>\r\n  flow(filter({ type }), map('label'))(data);\r\n\r\nexport {\r\n  clampHue,\r\n  getColor,\r\n  get100color,\r\n  getAverage,\r\n  getAverageColor,\r\n  ranges,\r\n  getTextColor,\r\n  getPercentageValue,\r\n  findSeriesMax,\r\n  getSeries,\r\n  getLabels,\r\n};\r\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { merge } from 'lodash/fp';\nimport { getAverageColor, findSeriesMax } from 'utils';\n\nconst BarChart = ({\n  id = 'basic-bar',\n  title,\n  subtitle,\n  series,\n  max,\n  options = {},\n  colors,\n  textColors,\n}) => {\n  const defaultOptions = {\n    title: {\n      text: title,\n      floating: true,\n      align: 'center',\n    },\n\n    subtitle: {\n      text: subtitle,\n      floating: false,\n      align: 'center',\n    },\n\n    chart: {\n      id,\n      stacked: true,\n    },\n\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        borderRadius: 4,\n      },\n    },\n\n    stroke: {\n      colors: ['#000'],\n      width: 1,\n    },\n\n    yaxis: {\n      max: max || findSeriesMax(series),\n    },\n\n    colors,\n\n    dataLabels: {\n      style: {\n        colors: textColors,\n      },\n    },\n\n    tooltip: {\n      style: {\n        fontSize: '14px',\n      },\n      y: {\n        title: {\n          formatter: seriesName => seriesName + ':',\n        },\n      },\n    },\n\n    legend: {\n      markers: {\n        fillColors: series.map(({ data }) =>\n          getAverageColor(data),\n        ),\n      },\n    },\n  };\n\n  const finalOptions = merge(defaultOptions, options);\n\n  return (\n    <Chart\n      options={finalOptions}\n      series={series}\n      type=\"bar\"\n      width={'768'}\n      height={`${\n        series[series.length - 1].data.length *\n          40 *\n          (100 / 70) +\n        60.61 +\n        (series.length <= 1 ? 3.5 : 0) +\n        (subtitle ? 22 : 0)\n      }`}\n    />\n  );\n};\n\nexport default BarChart;\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { BarChart } from 'components';\r\nimport { safari_1 } from 'data/safari_1';\r\n\r\nimport {\r\n  getColor,\r\n  getTextColor,\r\n  getSeries,\r\n  getLabels,\r\n} from 'utils';\r\n\r\nconst getCurrentSeries = getSeries(safari_1);\r\nconst getCurrentLabels = getLabels(safari_1);\r\nconst getCurrentPositionLabels = getLabels(\r\n  safari_1,\r\n  'position',\r\n);\r\n\r\nconst Safari1 = () => {\r\n  const series = [\r\n    {\r\n      name: 'ΓΡΙΦΟΣ',\r\n      data: getCurrentSeries('riddle').slice(0, 2),\r\n    },\r\n    {\r\n      name: 'ΑΝΤΙΚΕΙΜΕΝΟ',\r\n      data: getCurrentSeries('item').slice(0, 2),\r\n    },\r\n  ];\r\n\r\n  const series2 = [\r\n    {\r\n      name: 'ΓΡΙΦΟΣ',\r\n      data: getCurrentSeries('riddle').slice(2),\r\n    },\r\n    {\r\n      name: 'ΑΝΤΙΚΕΙΜΕΝΟ',\r\n      data: getCurrentSeries('item').slice(2),\r\n    },\r\n  ];\r\n\r\n  const series3 = [\r\n    {\r\n      name: 'ΘΕΣΗ',\r\n      data: getCurrentSeries('position'),\r\n    },\r\n  ];\r\n\r\n  const options = {\r\n    xaxis: {\r\n      categories: getCurrentLabels().slice(0, 2),\r\n    },\r\n  };\r\n\r\n  const options2 = {\r\n    xaxis: {\r\n      categories: getCurrentLabels().slice(2),\r\n    },\r\n  };\r\n\r\n  const options3 = {\r\n    xaxis: {\r\n      categories: getCurrentPositionLabels(),\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid item>\r\n        <BarChart\r\n          id={'chart-safari-1-packs'}\r\n          title={'ΣΑΦΑΡΙ 1'}\r\n          subtitle={'PACKS'}\r\n          options={options}\r\n          series={series}\r\n          max={460}\r\n          colors={[\r\n            ({ value }) => getColor(200, 400)(value),\r\n            ({ value }) => getColor(30, 60)(value),\r\n          ]}\r\n          textColors={[getTextColor(400), getTextColor(60)]}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <BarChart\r\n          id={'chart-safari-1-riddles'}\r\n          title={'ΣΑΦΑΡΙ 1'}\r\n          subtitle={'ΓΡΙΦΟΙ'}\r\n          options={options2}\r\n          series={series2}\r\n          max={160}\r\n          colors={[\r\n            ({ value }) => getColor(30, 100)(value),\r\n            ({ value }) => getColor(30, 60)(value),\r\n          ]}\r\n          textColors={[getTextColor(100), getTextColor(60)]}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <BarChart\r\n          id={'chart-safari-1-position'}\r\n          title={'ΣΑΦΑΡΙ 1'}\r\n          subtitle={'ΘΕΣΗ'}\r\n          options={options3}\r\n          series={series3}\r\n          max={90}\r\n          colors={[({ value }) => getColor(45, 90)(value)]}\r\n          textColors={[getTextColor(90)]}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Safari1;\r\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { BarChart } from 'components';\nimport { safari_2 } from 'data/safari_2';\n\nimport {\n  getColor,\n  getTextColor,\n  getSeries,\n  getLabels,\n} from 'utils';\n\nconst getCurrentSeries = getSeries(safari_2);\nconst getCurrentLabels = getLabels(safari_2);\n\nconst Safari2 = () => {\n  const series = [\n    {\n      name: 'ΓΡΙΦΟΣ',\n      data: getCurrentSeries('riddle'),\n    },\n    {\n      name: 'ΘΕΣΗ',\n      data: getCurrentSeries('position'),\n    },\n  ];\n\n  const series2 = [\n    {\n      name: 'ΥΠΟΘΕΣΗ',\n      data: getCurrentSeries('case'),\n    },\n  ];\n\n  const options = {\n    xaxis: {\n      categories: getCurrentLabels(),\n    },\n  };\n\n  const options2 = {\n    xaxis: {\n      categories: ['ΥΠΟΘΕΣΗ'],\n    },\n  };\n\n  return (\n    <>\n      <Grid item>\n        <BarChart\n          id={'chart-safari-2'}\n          title={'ΣΑΦΑΡΙ 2'}\n          options={options}\n          series={series}\n          max={240}\n          colors={[\n            ({ value }) => getColor(50, 150)(value),\n            ({ value }) => getColor(45, 90)(value),\n          ]}\n          textColors={[getTextColor(150), getTextColor(90)]}\n        />\n      </Grid>\n\n      <Grid item>\n        <BarChart\n          title={'ΥΠΟΘΕΣΗ'}\n          id={'chart-case'}\n          options={options2}\n          series={series2}\n          max={900}\n          colors={[\n            ({ value }) => getColor(450, 900)(value),\n          ]}\n          textColors={[getTextColor(900)]}\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default Safari2;\n","import React from 'react';\nimport { BarChart } from 'components';\nimport { safari_3 } from 'data/safari_3';\n\nimport {\n  getColor,\n  getTextColor,\n  getSeries,\n  getLabels,\n} from 'utils';\n\nconst getCurrentSeries = getSeries(safari_3);\nconst getCurrentLabels = getLabels(safari_3);\n\nconst Safari3 = () => {\n  const series = [\n    {\n      name: 'ΓΡΙΦΟΣ',\n      data: getCurrentSeries('riddle'),\n    },\n    {\n      name: 'ΑΝΤΙΚΕΙΜΕΝΟ',\n      data: getCurrentSeries('item'),\n    },\n    {\n      name: 'ΘΕΣΗ',\n      data: getCurrentSeries('position'),\n    },\n  ];\n\n  const options = {\n    xaxis: {\n      categories: getCurrentLabels(),\n    },\n  };\n\n  return (\n    <BarChart\n      id={'chart-safari-3'}\n      title={'ΣΑΦΑΡΙ 3'}\n      options={options}\n      series={series}\n      max={350}\n      colors={[\n        ({ value }) => getColor(100, 200)(value),\n        ({ value }) => getColor(20, 60)(value),\n        ({ value }) => getColor(45, 90)(value),\n      ]}\n      textColors={[\n        getTextColor(200),\n        getTextColor(60),\n        getTextColor(90),\n      ]}\n    />\n  );\n};\n\nexport default Safari3;\n","import React from 'react';\nimport { BarChart } from 'components';\nimport { radio_1 } from 'data/radio_1';\n\nimport {\n  getColor,\n  getTextColor,\n  getSeries,\n  getLabels,\n} from 'utils';\n\nconst getCurrentSeries = getSeries(radio_1);\nconst getCurrentLabels = getLabels(radio_1, 'radio');\n\nconst Radio1 = () => {\n  const series = [\n    {\n      name: 'ΡΑΔΙΟ',\n      data: getCurrentSeries('radio'),\n    },\n  ];\n\n  const options = {\n    xaxis: {\n      categories: getCurrentLabels(),\n    },\n  };\n\n  return (\n    <BarChart\n      id={'chart-radio-1'}\n      title={'ΡΑΔΙΟ 1'}\n      options={options}\n      series={series}\n      max={500}\n      colors={[({ value }) => getColor(200, 500)(value)]}\n      textColors={[getTextColor(500)]}\n    />\n  );\n};\n\nexport default Radio1;\n","import React from 'react';\nimport { BarChart } from 'components';\nimport { radio_2 } from 'data/radio_2';\n\nimport {\n  getColor,\n  getTextColor,\n  getSeries,\n  getLabels,\n} from 'utils';\n\nconst getCurrentSeries = getSeries(radio_2);\nconst getCurrentLabels = getLabels(radio_2, 'radio');\n\nconst Radio2 = () => {\n  const series = [\n    {\n      name: 'ΡΑΔΙΟ',\n      data: getCurrentSeries('radio'),\n    },\n  ];\n\n  const options = {\n    xaxis: {\n      categories: getCurrentLabels(),\n    },\n  };\n\n  return (\n    <BarChart\n      id={'chart-radio-2'}\n      title={'ΡΑΔΙΟ 2'}\n      options={options}\n      series={series}\n      max={500}\n      colors={[({ value }) => getColor(200, 500)(value)]}\n      textColors={[getTextColor(500)]}\n    />\n  );\n};\n\nexport default Radio2;\n","import React from 'react';\nimport { BarChart } from 'components';\nimport { police_department } from 'data/police_department';\nimport { getColor, getTextColor, getSeries } from 'utils';\n\nconst getCurrentSeries = getSeries(police_department);\n\nconst PoliceDepartment = () => {\n  const series = [\n    {\n      name: 'ΡΑΔΙΟ',\n      data: getCurrentSeries('case'),\n    },\n  ];\n\n  const options = {\n    xaxis: {\n      categories: ['ΥΠΟΘΕΣΗ'],\n    },\n  };\n\n  return (\n    <BarChart\n      id={'chart-pd'}\n      title={'Κ.Χ.Θ. POLICE DEPARTMENT'}\n      options={options}\n      series={series}\n      max={900}\n      colors={[({ value }) => getColor(300, 900)(value)]}\n      textColors={[getTextColor(900)]}\n    />\n  );\n};\n\nexport default PoliceDepartment;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'components';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}